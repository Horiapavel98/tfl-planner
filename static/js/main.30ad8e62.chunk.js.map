{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","outboundJourneyData","setOutboundJourneyData","inboundJourneyData","setInboundJourneyData","getJourneyData","json","output","i","length","journey","legs","duration","leg","push","split","getOutboundJourneyData","a","fetch","then","res","json_response","getInboundJourneyData","Navbar","variant","bg","Container","Brand","Collapse","className","Text","Card","Body","Title","Subtitle","xmlns","width","height","fill","class","viewBox","fill-rule","d","Button","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kUA0GeA,MAhGf,WAEE,MAAsDC,qBAAtD,mBAAOC,EAAP,KAA4BC,EAA5B,KACA,EAAoDF,qBAApD,mBAAOG,EAAP,KAA2BC,EAA3B,KAEIC,EAAiB,SAACC,GAEpB,IADA,IAAIC,EAAS,CAAC,MACLC,EAAI,EAAIA,EAAIF,EAAI,SAAaG,SAAUD,EAAG,CAC/C,IAAIE,EAAUJ,EAAI,SAAaE,GAC3BG,EAAOD,EAAO,KACdE,EAAWF,EAAO,SAClBG,EAAMF,EAAK,GAAL,cAEVJ,EAAOO,KAAK,CAAC,eAAgBD,EAAIE,MAAM,KAAK,GAAI,0BAA2BH,EAAU,cACrFL,EAAOO,KAAK,MACZP,EAAOO,KAAK,MAGhB,OAAOP,GAGLS,EAAsB,uCAAG,4BAAAC,EAAA,6DAC3Bf,EAAuB,oBADI,SAECgB,MA1BU,oEA2BjCC,MAAK,SAAAC,GAAG,OAAIA,EAAId,UAHM,OAErBe,EAFqB,OAM3BnB,EAAuBG,EAAegB,IANX,2CAAH,qDAStBC,EAAqB,uCAAG,4BAAAL,EAAA,6DAC1Bb,EAAsB,oBADI,SAEEc,MAlCS,oEAmChCC,MAAK,SAAAC,GAAG,OAAIA,EAAId,UAHK,OAEpBe,EAFoB,OAK1BjB,EAAsBC,EAAegB,IALX,2CAAH,qDAQzB,OACE,oCACA,6BACA,kBAACE,EAAA,EAAD,CAAQC,QAAQ,OAAOC,GAAG,QACtB,kBAACC,EAAA,EAAD,KACI,kBAACH,EAAA,EAAOI,MAAR,oBACA,kBAACJ,EAAA,EAAOK,SAAR,CAAiBC,UAAU,cACvB,kBAACN,EAAA,EAAOO,KAAR,2BAOZ,yBAAKD,UAAU,OAEf,yBAAKA,UAAU,SACX,kBAACE,EAAA,EAAD,CAAMF,UAAU,QACZ,kBAACE,EAAA,EAAKC,KAAN,KACI,kBAACD,EAAA,EAAKE,MAAN,2CACA,kBAACF,EAAA,EAAKG,SAAN,CAAeL,UAAU,mBACzB,yBAAKM,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,KAAK,eAAeC,MAAM,wBAAwBC,QAAQ,aACrH,0BAAMC,YAAU,UAAUC,EAAE,yMAGhC,kBAACX,EAAA,EAAKG,SAAN,CAAeL,UAAU,mBAAzB,YAGA,kBAACE,EAAA,EAAKD,KAAN,CAAWD,UAAU,YAChB5B,GAEL,kBAAC0C,EAAA,EAAD,CAAQC,QAAS5B,GAAjB,sBAGR,kBAACe,EAAA,EAAD,CAAMF,UAAU,QACZ,kBAACE,EAAA,EAAKC,KAAN,KACI,kBAACD,EAAA,EAAKE,MAAN,2CACA,kBAACF,EAAA,EAAKG,SAAN,CAAeL,UAAU,mBACzB,yBAAKM,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,KAAK,eAAeC,MAAM,0BAA0BC,QAAQ,aACvH,0BAAMC,YAAU,UAAUC,EAAE,wMAGhC,kBAACX,EAAA,EAAKG,SAAN,CAAeL,UAAU,mBAAzB,WAGA,kBAACE,EAAA,EAAKD,KAAN,CAAWD,UAAU,YAChB1B,GAEL,kBAACwC,EAAA,EAAD,CAAQC,QAAStB,GAAjB,0BCpFDuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB5B,MAAK,YAAkD,IAA/C6B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.30ad8e62.chunk.js","sourcesContent":["import './App.css';\nimport React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { Card } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport { Navbar, Container } from 'react-bootstrap';\n\nconst TFL_API_OUTBOUND_JOURNEY_ENDPOINT = \"https://api.tfl.gov.uk/journey/journeyresults/1000257/to/1000080\"\nconst TFL_API_INBOUND_JOURNEY_ENDPOINT = \"https://api.tfl.gov.uk/journey/journeyresults/1000080/to/1000257\"\n\nfunction App() {\n\n  const [outboundJourneyData, setOutboundJourneyData] = useState()\n  const [inboundJourneyData, setInboundJourneyData] = useState()\n\n  let getJourneyData = (json) => {\n    var output = [\"\\n\"]\n    for (let i = 0 ; i < json['journeys'].length; ++i) {\n        var journey = json['journeys'][i]\n        var legs = journey['legs']\n        var duration = journey['duration']\n        var leg = legs[0]['departureTime']\n\n        output.push([\"Leaving at: \", leg.split(\"T\")[1], \" -- with a duration of \", duration, \" minutes.\"])\n        output.push(\"\\n\")\n        output.push(\"\\n\")\n    }\n\n    return output\n  }\n\n  let getOutboundJourneyData = async () => {\n    setOutboundJourneyData(\"Getting data ...\")\n    const json_response = await fetch(TFL_API_OUTBOUND_JOURNEY_ENDPOINT)\n        .then(res => res.json())\n    \n    \n    setOutboundJourneyData(getJourneyData(json_response))\n  }\n\n  let getInboundJourneyData = async () => {\n    setInboundJourneyData(\"Getting data ...\")\n    const json_response = await fetch(TFL_API_INBOUND_JOURNEY_ENDPOINT)\n        .then(res => res.json())\n    \n    setInboundJourneyData(getJourneyData(json_response))\n  }\n  \n  return (\n    <>\n    <div>\n    <Navbar variant=\"dark\" bg=\"dark\">\n        <Container>\n            <Navbar.Brand>TFL Planner</Navbar.Brand>\n            <Navbar.Collapse className=\"NavbarText\">\n                <Navbar.Text>\n                    by Horia Pavel\n                </Navbar.Text>\n            </Navbar.Collapse>\n        </Container>\n    </Navbar>\n    </div>\n    <div className=\"App\">\n        {/* <Navbar/> */}\n    <div className=\"Cards\">\n        <Card className=\"Card\">\n            <Card.Body>\n                <Card.Title>Wembley Park Station to Farringdon</Card.Title>\n                <Card.Subtitle className=\"mb-2 text-muted\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-arrow-up-circle\" viewBox=\"0 0 16 16\">\n                    <path fill-rule=\"evenodd\" d=\"M1 8a7 7 0 1 0 14 0A7 7 0 0 0 1 8zm15 0A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-7.5 3.5a.5.5 0 0 1-1 0V5.707L5.354 7.854a.5.5 0 1 1-.708-.708l3-3a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1-.708.708L8.5 5.707V11.5z\"/>\n                </svg>\n                </Card.Subtitle>\n                <Card.Subtitle className=\"mb-2 text-muted\">\n                    Outbound\n                </Card.Subtitle>\n                <Card.Text className=\"CardText\">\n                    {outboundJourneyData}\n                </Card.Text>\n                <Button onClick={getOutboundJourneyData}>Get next trains!</Button>\n            </Card.Body>\n        </Card>\n        <Card className=\"Card\">\n            <Card.Body>\n                <Card.Title>Farringdon to Wembley Park Station</Card.Title>\n                <Card.Subtitle className=\"mb-2 text-muted\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-arrow-down-circle\" viewBox=\"0 0 16 16\">\n                    <path fill-rule=\"evenodd\" d=\"M1 8a7 7 0 1 0 14 0A7 7 0 0 0 1 8zm15 0A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM8.5 4.5a.5.5 0 0 0-1 0v5.793L5.354 8.146a.5.5 0 1 0-.708.708l3 3a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293V4.5z\"/>\n                </svg>\n                </Card.Subtitle>\n                <Card.Subtitle className=\"mb-2 text-muted\">\n                    Inbound\n                </Card.Subtitle>\n                <Card.Text className=\"CardText\">\n                    {inboundJourneyData}\n                </Card.Text>\n                <Button onClick={getInboundJourneyData}>Get next trains!</Button>\n            </Card.Body>\n        </Card>\n    </div>\n\n    </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}